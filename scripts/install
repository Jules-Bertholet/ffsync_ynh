#!/bin/bash

#=================================================
# GENERIC START
#=================================================

# IMPORT GENERIC HELPERS
source /usr/share/yunohost/helpers

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

# Import common cmd
source ./experimental_helper.sh
source ./_common.sh

ynh_script_progression --message="Validating installation parameters..."

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path_url=$(ynh_normalize_url_path --path_url $YNH_APP_ARG_PATH)
app=$YNH_APP_INSTANCE_NAME
final_path="/opt/yunohost/$app"

# Generate random password and save
secret=$(ynh_string_random)

# STORE SETTINGS FROM MANIFEST
ynh_app_setting_set --app $app --key final_path --value "$final_path"
ynh_app_setting_set --app $app --key secret --value "$secret"

# Check destination directory
test ! -e "$final_path" || ynh_die --message "This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app $app --domain $domain --path_url $path_url

#=================================================
# STANDARD MODIFICATIONS
#=================================================

# INSTALL DEPENDENCIES
ynh_script_progression --message="Installing dependencies..." --weight=7
ynh_install_app_dependencies $dependances

# CREATE A MYSQL DATABASE
ynh_script_progression --message="Configuring MySQL database..."
db_user=$app
db_name=$(ynh_sanitize_dbid --db_name $app)
ynh_app_setting_set --app $app --key db_name --value "$db_name"
ynh_mysql_setup_db --db_user "$db_user" --db_name "$db_name"

# DOWNLOAD, CHECK AND UNPACK SOURCE
ynh_script_progression --message="Installing sources files..." --weight=10
install_sources

# Modify assets to take path into account
# TODO: try to include this as a patch if still needed
# find ../sources/syncserver/page/sync_files/ -type f -exec sed -i -e "s@media\/img@$path_url\/media\/img@g" {} \;

# NGINX CONFIGURATION
ynh_script_progression --message="Configuring nginx"
ynh_add_nginx_config

if [ "$path_url" == "/" ]
then
	# $finalnginxconf comes from ynh_add_nginx_config
	# uwsgi_param is only needed for non-root installation
	ynh_replace_string --match_string "uwsgi_param " --replace_string "#uwsgi_param " --target_file "$finalnginxconf"
	ynh_replace_string --match_string "uwsgi_modifier1 " --replace_string "#uwsgi_modifier1 " --target_file "$finalnginxconf"
fi
ynh_store_file_checksum --file "$finalnginxconf"
systemctl reload nginx

# CREATE DEDICATED USER
ynh_script_progression --message="Configuring system user..."
ynh_system_user_create --username "$app" --home_dir "$final_path"

# create config file syncserver.ini
ynh_script_progression --message="Configuring application..."
rm "$final_path/syncserver.ini"
ln -s "/etc/uwsgi/apps-available/$app.ini" "$final_path/syncserver.ini"

# configure uwsgi
ynh_add_uwsgi_service 'domain secret db_user db_pwd db_name'

# MODIFY A CONFIG FILE
# TODO: fix this css patch
# ynh_replace_string "media\/img@$path_url\/media\/img@g" $final_path/syncserver/page/sync_files/firefox_sync-bundle.css
# ynh_replace_string "media\/img@$path_url\/media\/img@g" $final_path/syncserver/page/sync_files/responsive-bundle.css

#=================================================
# GENERIC FINALIZATION
#=================================================

# SECURE FILES AND DIRECTORIES
ynh_script_progression --message="Protecting directory"
set_permissions

# SETUP SSOWAT
# accessible by everyone (authentification is done by firefox accounts)
ynh_script_progression --message="Configuring permissions"
ynh_app_setting_set --app $app --key skipped_uris --value "/"

ynh_script_progression --message="Installation of $app completed" --last
